
<style>
    .inputRow{
        margin-bottom: 10px;
    }
    .inputRow input[type=text], .inputRow textarea{
        border: 1px solid black;
        width: 100%
    }
    #requestError{
        color: red;
        margin-top:20px;
        display:none;
    }
    #requestSuccess{
        color: red;
        margin-top:20px;
        display:none;
    }
</style>
<script src="https://sdk.amazonaws.com/js/aws-sdk-2.283.1.min.js"></script>
<div class="container">
	<div class="row">
		<div class="col-12">
            <form id="channel-form">
                <div class="row inputRow">
            	    <div class="col-5">
                        Do you want to edit Channel?
                    </div>
                    <div class="col-7">
                        <input type="radio" name="is_edit" value="1"><label for="male">Yes</label>&nbsp;&nbsp;
                        <input type="radio" name="is_edit" value="0" checked><label for="female">No</label>
                    </div>
            	</div>
			    <div class="row inputRow">
                    <div class="col-3">permalink</div>
                    <div class="col-1">:</div>
                    <div class="col-8"><input type="text" name="permalink" /></div>
                </div>
                <div class="row inputRow">
			        <div class="col-3">name</div>
			        <div class="col-1">:</div>
			        <div class="col-8"><input type="text" name="name" /></div>
                </div>
                <div class="row inputRow">
			        <div class="col-3">description</div>
                    <div class="col-1">:</div>
                    <div class="col-8"><textarea name="description" rows="2" cols="50" ></textarea></div>
                </div>
                <div class="row inputRow">
                    <div class="col-3">tagline</div>
                    <div class="col-1">:</div>
                    <div class="col-8"><textarea name="tagline" rows="2" cols="50" ></textarea></div>
                </div>
                <div class="row inputRow">
                    <div class="col-3">tags</div>
                    <div class="col-1">:</div>
                    <div class="col-8"><input type="text" name="tags" placeholder="Comma saperated tags" /></div>
                </div>
                <div class="row inputRow">
                    <div class="col-3">admins</div>
                    <div class="col-1">:</div>
                    <div class="col-8"><input type="text" name="admins" placeholder="Comma saperated user names" /></div>
			    </div>
			</form>

			<input id="originalImage" type="file" accept="image/*">
		</div>
		<div class="col-12" id="requestError"></div>
		<div class="col-12" id="requestSuccess" style="margin-top:20px;display:none;"></div>
		<div class="col-12" style="margin-top:20px;">
			<button class="btn btn-outline-danger" id="create-edit-channel">Create / Edit</button>
		</div>
	</div>

</div>
{{#contentFor "pageScripts"}}
	<script type="text/javascript">

	  $(document).ready(function() {





	    (function(window, $) {
          var Channel = function() {
            var oThis = this;

            oThis.config = {};

            oThis.apiUrl = $('meta[name="api-url"]').attr('content');

            oThis.createEditBtn = $('#create-edit-channel');
            oThis.imageUploadParams = {};
            oThis.imageNames = [];

            oThis.getPresignedPostUrl();

            oThis.bindEvents();
          };

          Channel.prototype = {
            bindEvents: function() {
              var oThis = this;

              // Generate report
              $(oThis.createEditBtn).click(function(event) {
                event.preventDefault();

                console.log('kya yeh kia....');

                $(oThis.createEditBtn).css('pointer-events', 'none');
                $(oThis.createEditBtn).html('Processing!...');
                $(oThis.createEditBtn).addClass('disabled');

                var successCallback = function() {
                  $(oThis.createEditBtn).css('pointer-events', 'auto');
                  $(oThis.createEditBtn).html('Create / Edit');
                  $(oThis.createEditBtn).removeClass('disabled');
                };

                oThis.uploadImages(successCallback, successCallback);
              });
            },

            getPresignedPostUrl: function() {
              var oThis = this;

              $.ajax({
                url: oThis.apiUrl + '/admin/channel/presigned-url',
                type: 'GET',
                contentType: 'application/json',
                success: function(response) {
                  if (response.data) {
                    console.log(response.data);

                    if (response.data.channel_upload_params && response.data.channel_upload_params.images) {
                      const imagesToUpload = response.data.channel_upload_params.images;
                      console.log('----------------imagesToUpload-------------------------------');
                      console.log(imagesToUpload);

                      for (let imageName in imagesToUpload) {
                        oThis.imageNames.push(imageName);
                        oThis.imageUploadParams[imageName] = oThis.imageUploadParams[imageName] || {};
                        oThis.imageUploadParams[imageName]['post_url'] = imagesToUpload[imageName].post_url;
                        const post_fields = imagesToUpload[imageName].post_fields;

                        for (let imu = 0; imu < post_fields.length; imu++) {
                          oThis.imageUploadParams[imageName]['post_fields'] =
                            oThis.imageUploadParams[imageName]['post_fields'] || {};
                          oThis.imageUploadParams[imageName]['post_fields'][post_fields[imu].key] = post_fields[imu].value;
                        }
                      }
                    }

                    console.log('----------------imageUploadParams-------------------------------');
                    console.log(oThis.imageUploadParams);
                  } else {
                    console.error('=======Unknown response====.serialize', response);
                  }
                },
                error: function(error) {
                  console.error('===error', error);
                }
              });
            },

            uploadImages: function(successCallback, successCallback) {
              const oThis = this;

              const originalFiles = document.getElementById('originalImage').files;

              if (originalFiles.length > 0) {
                const originalFile = originalFiles[0];
                const originalFileSize = originalFile.size;
                const uploadImageName = oThis.imageNames[0];
                originalFile.name = uploadImageName;

                const imagePostUrl = oThis.imageUploadParams[uploadImageName]['post_url'];
                const imageUploadParams = oThis.imageUploadParams[uploadImageName]['post_fields'];

                imageUploadParams['file'] = originalFile;
                imageUploadParams['enctype'] = 'multipart/form-data';
                console.log('--------------------------------------------', imageUploadParams);

                // send ajax to api to create edit channel.
                $.ajax({
                  url: imagePostUrl,
                  type: 'POST',
                  data: oThis.getFormData(imageUploadParams),
                  encType:"multipart/form-data",
                  processData: false,
                  contentType: false,
                  cache: false,
                  success: function(response) {
                    console.log(response)
                  },
                  error: function(error) {
                    console.error('===error', error);
                  }
                });
              }

              oThis.createEditChannel(successCallback, successCallback);
            },

            getFormData(paramsList) {
              let formData = new FormData();
              console.log('------------------------formData--------------------', formData);
              for(let key in paramsList) {
                console.log('--------------------', key, paramsList[key]);
                formData.append(key, paramsList[key]);
              }
              return formData;
            },

            createEditChannel: function(successCallback, failureCallback) {
              var oThis = this;

              var data = $('#channel-form').serializeArray({});

              var postData = {};

              for (var i = 0; i < data.length; i++) {
                if (data[i].value) {
                  postData[data[i].name] = data[i].value;
                }
              }

              // send ajax to api to create edit channel.
              $.ajax({
                url: oThis.apiUrl + '/admin/channel/edit',
                type: 'POST',
                data: JSON.stringify(postData),
                contentType: 'application/json',
                success: function(response) {
                  if (response.data) {
                    $('#requestSuccess').html('Request Successful.');
                    $('#requestSuccess').show();
                    successCallback();
                  } else {
                    $('#requestError').html(JSON.stringify(response.err));
                    $('#requestError').show();
                    console.error('=======Unknown response====', response);
                  }
                },
                error: function(error) {
                  console.error('===error', error);
                  $('#requestError').html('Request Failed.');
                  $('#requestError').show();

                  failureCallback();
                  if (error.responseJSON.err.code == 'UNAUTHORIZED') {
                    window.location = '/admin/unauthorized';
                  }
                }
              });
            }
          };

          window.Channel = Channel;
        })(window, jQuery);






	    var Community = new window.Channel();
	  });
	</script>
{{/contentFor}}
